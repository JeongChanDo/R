setwd("~/GitHub/big_data/multivariate_analysis")
a = c(1:10)
a
a = c(20:10)
a
a %/% 3
a %% 3 # 모듈(나머지) 출력
x = -5:5
x[x<0]
seq(-pi, pi, length = 10) # 사용자가 지정한 조건과 수만큼 값 생성
#평규이 10이고 표준편차가 1인 정규 분포를 따르는 난수 10개 생성
rnorm(10, 10, 1)
x = c(1:12)
x = matrix(x, ncols=3, byrow = T)
x = matrix(x, ncol=3, byrow = T)
x
#평균이 10이고 표준편차가 1인 정규 분포를 따르는 난수 10개 생성
rnorm(10, 10, 1)
x = c(1:12)
x = matrix(x, ncol=3, byrow = T)
x
matrix(1, nrow=3, ncol=5)
x[,c(1:2)]
x[c(1:3), c(1:2)]
t(x)
y = matrix(1,nrow=4, ncol=3)
t(x)*y
y
x*y
x
y
x
x
y
t(x) %*% y
t(x)
x
y
t(x) %*% y
sqaure = function(x) {x*x}
square(4)
sqaureF = function(x) {x*x}
squareF(4)
sqaureF <- function(x) {x*x}
squareF(4)
squareF = function(x) {x*x}
squareF(4)
square = function(x) {x*x}
square(4)
#패키지 설치
#cluster 패키지
install.packages("cluster")
library(cluster)
mat = c(68, 64, 48, 46, 78, 60, 90, 50, 66, 70)
phys = c(70, 68, 46, 48, 84, 64, 92, 52, 68, 72)
plot(mat, phys, main = "수학과 물리 점수에 관한 산점도")
cor(mat,phys)
library(xlsx)
survey.data = read.xlsx("data/survey.xlsx", 1)
head(survey.data)
summary(survey.data)
tapply(age, sex, mean)
attach(survey.data)
tapply(age, sex, mean)
tapply(age,sex, sd)
tapply(age,marriage, mean)
tapply(age,marriage, sd)
sex.marriage = list(sex, marriage)
table(sex.marriage)
View(sex.marriage)
tapply(age, sex.marriage, mean)
tapply(age, sex.marriage, mean)
tapply(age, sex.marriage, sd)
tapply(age, sex.marriage, mean)
tapply(age, sex.marriage, sd)
table(sex)
table(edu)
SexEdu = table(sex, edu)
sexEdu
SexEdu
summary(SexEdu)
table(sex)
table(edu)
SexEdu = table(sex, edu)
SexEdu
summary(SexEdu)
example = read.table("data/ex8.txt", header=T)
attach(example)
colnames(example)
head(example)
sex.tb = table(sex)
sex.tb
edu.tb = table(edu)
edu.tb
head(example)
attach(example)
colnames(example)
sex.tb = table(sex)
sex.tb
head(example)
colnames(example)
sex.tb = table(sex)
sex.tb
edu.tb = table(edu)
edu.tb
barplot(edu.tb)
rownames(edu.tb) = c("중졸 이하", "고졸", "대졸이상")
edu.tb
barplot(edu.tb)
plot(age, salary)
title("scatter plot of age,salary")
plot(age, salary, type="n") # type="n"은 plot을 중지
points(age[sex==1], salary[sex==1], pch="M", col="BLUE")
points(age[sex==2], salary[sex==2], pch="F", col="RED")
title("남녀구분 : 나이, 월수입 산점도")
data = read.table("data/haldheader.txt", header=T)
head(tata)
df(data)
head(data)
tbl(data)
data = read.table("data/haldheader.txt", header=T)
head(data)
View(data)
data = read.table("data/haldheader.txt", header=T)
head(data)
x = data[,-1] # 1번변수빼고 모든 열
y = data[,1] #1번열에 대한 모든 행데이터
sample.reg = lsfit(x,y)
sample.reg
resid = sample.reg$resid #잔차
coeff = sample.reg$coeff #계수
yhat = y - resid
plot(resid, yhat)
title("scatter plot of resid, yhat \n Y = (X1, X2, X3, X4)")
library(xlsx)
survey.data = read.xlsx("data/survey.xlsx", 1)
head(survey.data)
attach(survey.data)
summary(survey.data)
edu.tb = table(edu)
edu.tb
ronames(edu.tb) = c("무학","초졸","중졸","고졸","대졸")
barplot(edu.tb)
edu.tb = table(edu)
edu.tb
rowames(edu.tb) = c("무학","초졸","중졸","고졸","대졸")
barplot(edu.tb)
edu.tb = table(edu)
edu.tb
rownames(edu.tb) = c("무학","초졸","중졸","고졸","대졸")
barplot(edu.tb)
title("교육 정도에 대한 막대 그림")
pie(edu.tb)
title("교육 정도에 대한 원 그림")
sex.edu = list(sex, edu)
sex.edu.tb = table(sex.edu)
sex.edu.tb
sex.edu = list(sex, edu)
sex.edu.tb = table(sex.edu)
sex.edu.tb
colnames(sex.edu.tb) = c("무학", "초졸", "중졸", "고졸", "대졸")
rownames(sex.edu.tb) = c("남성", "여성")
barplot(sex.edu.tb)
table("성별, 교육 정도에 대한 막대그림")
sex.edu = list(sex, edu)
sex.edu.tb = table(sex.edu)
sex.edu.tb
colnames(sex.edu.tb) = c("무학", "초졸", "중졸", "고졸", "대졸")
rownames(sex.edu.tb) = c("남성", "여성")
barplot(sex.edu.tb)
title("성별, 교육 정도에 대한 막대그림")
par(mfrow=c(1,2))
pie(sex.edu.tb[1,])
title("남성의 교육 정도")
pie(sex.edu.tb[2,])
title("여성의 교육정도")
hist(salary)
stem(salary)
title("성별에 따른 봉급 상자그림")
boxplot(salary~sex)
hist(salary)
title("임금에 대한 히스토그램")
hist(salary)
title("임금에 대한 히스토그램")
par(mfrow=c(1,2))
hist(salary)
stem(salary)
boxplot(salary~sex)
title("성별에 따른 봉급 상자그림")
plot(co2)
plot(co2)
lines(smooth(col2), col="BLUE")
lines(smooth(co2), col="BLUE")
x = seq(0, 20, 0.1) # 0부터 20까지 0.1 간격으로 생성
y = exp(-x/10) * cos(2*x)
plot(x, y)
x = seq(0, 20, 0.1) # 0부터 20까지 0.1 간격으로 생성
y = exp(-x/10) * cos(2*x)
par(mfrow=c(1,2))
plot(x, y)
plot(x, y, type="I") # I선으로 연결
x = seq(0, 20, 0.1) # 0부터 20까지 0.1 간격으로 생성
y = exp(-x/10) * cos(2*x)
par(mfrow=c(1,2))
plot(x, y)
plot(x, y, type="l") # l선으로 연결
x = seq(0, 20, 0.1) # 0부터 20까지 0.1 간격으로 생성
y = exp(-x/10) * cos(2*x)
par(mfrow=c(1,2))
plot(x, y)
plot(x, y, type="l") # l선으로 연결
library(HSAUR2)
library(MVA)
install.packages("HSAUR2")
install.packages("MVA")
library(HSAUR2)
library(MVA)
data("USairpollution")
head(USairpollution)
plot(manu, popul)
attach(USairpollution)
plot(manu, popul)
bvbox(x, xlab="manu", ylab="popul") #biviriate box
x = USairpollution[,c(3,4)]
bvbox(x, xlab="manu", ylab="popul") #biviriate box
title("bivariate boxplot")
identify(x)
identify(x) #특이값 표시
rownames(x)[c(7,9,14,30)]
data("USairpollution")
head(USairpollution)
attach(USairpollution)
plot(manu, popul)
bvbox(x, xlab="manu", ylab="popul") #biviriate box
title("bivariate boxplot")
identify(x) #특이값 표시. plot 마우스로 클릭 후 esc
rownames(x)[c(7,9,14,30)]
social.data = read.table("data/social_data.txt", header=T)
pairs(social.data)
round(cor(social.data), 3)
social = social.data[, -1]
year = socail.data[, 1]
year = social.data[, 1]
rownames(social) = year
head(socical)
head(social)
View(social.data)
social = social.data[, -1]
year = social.data[, 1]
rownames(social) = year #social 데이터의 행들을 년도로 다바꿈
head(social)
stars(social)
esu = read.table("data/education.txt",header=T)
edu
edu = read.table("data/education.txt",header=T)
edu
names = edu[,1]
grade70 = edu[,2]
grade90 = edu[,3]
par(mfrow=c(1,2))
pie(grade70, label=name, clockwise = T,main="1970년대 여성학력")
pie(grade90, label=name, clockwise = T,main="1990년대 여성학력")
edu = read.table("data/education.txt",header=T)
edu
names = edu[,1]
grade70 = edu[,2]
grade90 = edu[,3]
par(mfrow=c(1,2))
pie(grade70, label=names, clockwise = T,main="1970년대 여성학력")
pie(grade90, label=names, clockwise = T,main="1990년대 여성학력")
digit
digit = read.table("data/digit.txt", header=T)
digit = as.matrix(digit) # 행렬데이터로 지정
digit
barplot(digit, legend.txt=rownames(digit), col=c(2:6))
View(digit)
(mfrow=c(1,1))
par(mfrow=c(1,1))
barplot(digit, legend.txt=rownames(digit), col=c(2:6))
digit
digit
digit = read.table("data/digit.txt", header=T)
digit = as.matrix(digit) # 행렬데이터로 지정
digit
attach(rates)
rates = read.table("data/birth.txt", header=T)
attach(rates)
boxplot(birth, death, names=c("Birth", "Death"))
title("출생률과 사망률에 대한 상자그림")
identity(rates)
par(mfrow=c(2,1))
#출생률에 대한 히스토그램 생성
hist(birth, xlab="birth rate", ylab="frequency",
xlim=c(0:70), ylim=c(0:40))
par(mfrow=c(2,1))
#출생률에 대한 히스토그램 생성
hist(birth, xlab="birth rate", ylab="frequency",
xlim=c(0,70), ylim=c(0,40))
hist(death, xlab="death rate", ylab="frequency",
xlim=c(0,70), ylim=c(0,40))
